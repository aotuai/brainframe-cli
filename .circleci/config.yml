version: 2.1

parameters:
  poetry-version:
    type: string
    default: "1.1.4"

workflows:
  lint:
    jobs:
      - lint
  build:
    jobs:
      - build-deb
  deploy:
    jobs:
      - upload-to-pypi:
          filters:
            # Ignore any commit on any branch by default
            branches:
              ignore: /.*/
            # Run only when a tag is created
            tags:
              only: /^v.+\..+\..+/
  tests:
    jobs:
      - test-installation


jobs:
  lint:
    docker:
      - image: cimg/python:3.6
    steps:
      - checkout
      - install-poetry
      - run: poetry install --no-root
      - run: poetry run isort --check .
      - run: poetry run black --check .
      - run: poetry run mypy -p "brainframe.cli"

  build-deb:
    docker:
      - image: cimg/python:3.6
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install -y software-properties-common dpkg-dev devscripts equivs
      - run: sudo add-apt-repository ppa:jyrki-pulliainen/dh-virtualenv
      - run: sudo apt-get install -y dh-virtualenv
      - install-poetry
      - checkout
      - run: cp -r package/debian .
      - run: cp package/setup.py .
      - run: sudo mk-build-deps --install debian/control
      - run: poetry export --output requirements.txt
      - run: dpkg-buildpackage --unsigned-source --unsigned-changes --build=binary
      - run: mv /brainframe-cli*.deb /brainframe-cli.deb
      - store_artifacts:
          path: /brainframe-cli.deb
          destination: brainframe-cli.deb

  upload-to-pypi:
    docker:
      - image: cimg/python:3.6
    environment:
      POETRY_HTTP_BASIC_PYPI_USERNAME: __token__
    steps:
      - checkout
      - install-poetry
      - run: poetry build
      - run: POETRY_HTTP_BASIC_PYPI_PASSWORD=${PYPI_PASSWORD} poetry publish

  test-installation:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install python3 python3-dev curl git -y
      - checkout
      - install-poetry
      - run: sudo $(which poetry) install
      - run: sudo $(which poetry) run brainframe install --noninteractive
      - run: sudo $(which poetry) run brainframe compose up -d
      - run:
          name: Check BrainFrame containers are running
          command: |
            until docker container inspect -f {{.State.Running}}  $(docker ps -q -f name="brainframe_core") >/dev/null 2>/dev/null; do
                sleep 0.1;
            done;
            echo "BrainFrame core container is running."
          no_output_timeout: 1m
      - run:
          name: Check BrainFrame core service is up
          command: |
            until curl -f http://localhost/api/version >/dev/null 2>/dev/null; do
              sleep 0.1;
            done;
            echo "BrainFrame core service is up."
          no_output_timeout: 1m
      - run: sudo $(which poetry) run brainframe compose down


commands:
  install-poetry:
    steps:
      - run: sudo apt-get update && sudo apt-get install -y python3-pip
      - run: >
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
          | python3 - --version << pipeline.parameters.poetry-version >>
      # Add to the PATH
      - run: echo 'export PATH=$HOME/.poetry/bin:$PATH' >> $BASH_ENV
