version: 2.1

workflows:
  lint:
    jobs:
      - lint
  deploy:
    jobs:
      - upload_to_pypi:
          filters:
            # Ignore any commit on any branch by default
            branches:
              ignore: /.*/
            # Run only when a tag is created
            tags:
              only: /^v.+\..+\..+/
  test:
    jobs:
      - test_installation


jobs:
  lint:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - run: "curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
          | python3 - --version 1.1.0"
      - run: poetry install --no-root
      - run: poetry run isort --check .
      - run: poetry run black --check .
      - run: poetry run mypy -p "brainframe.cli"
  upload_to_pypi:
    docker:
      - image: circleci/python:3.6
    environment:
      POETRY_HTTP_BASIC_PYPI_USERNAME: __token__

    steps:
      - checkout
      - run: "curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
          | python3 - --version 1.1.0"
      - run: poetry build
      - run: POETRY_HTTP_BASIC_PYPI_PASSWORD=${PYPI_PASSWORD} poetry publish
  test_installation:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - run: sudo apt-get update
      - run: sudo apt-get install python3 python3-dev curl git -y
      - checkout
      - run: "curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py
          | python3 - --version 1.1.0"
      - run: echo "export PATH=$PATH:$HOME/.poetry/bin" >> $BASH_ENV
      - run: sudo $(which poetry) install
      - run: sudo $(which poetry) run brainframe install --noninteractive
      # - run: sudo $(which poetry) run brainframe compose up -d
      # - run: docker container inspect -f {{.State.Running}}  $(docker ps -q -f name="brainframe_core")
      - run: for i in `seq 1 5`; do if curl -f http://localhost/api/version; then exit 0; fi; sleep 1; done; exit 1
